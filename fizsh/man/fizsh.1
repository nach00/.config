.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "FIZSH 1"
.TH FIZSH 1 "2024-12-06" "fizsh 1.0.9" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
fizsh \- Fizsh is a user friendly front end to zsh.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
fizsh [\s-1OPTIONS\s0] ... [\s-1ARGUMENTS\s0] ...
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Fizsh provides zsh with interactive syntax-highlighting and a MATLAB-like history-search. Fizsh is intended to look and feel similar to fish. A distinguishing feature is that fizsh can handle Bourne compatible syntax. This is because fizsh is a front end to zsh. Fish does not handle Bourne compatible syntax.
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
\&\*(L"$HOME/.fizsh/\*(R" is the directory where fizsh keeps its local configuration files. The file \*(L"$HOME/.fizsh/.fizshrc\*(R" serves as the user's local startup script. Local customizations, such as aliases and functions, can be added here. This file allows the same syntax as \*(L"$HOME/.zshrc\*(R" under zsh. \*(L"$HOME/.fizsh/.fizsh_history\*(R" is the name of fizsh's history file. The other files in \*(L"$HOME/.fizsh\*(R" are installed when the user runs \*(L"/usr/bin/fizsh\*(R" for the first time. These files are automatically overwritten after installing a newer version of Fizsh. The user may call the function \*(L"fizsh-reinstall\*(R" to force a reinstallation of his local configuration files.
.PP
Compared to the default configuration of zsh, fizsh additionally sets the options \*(L"append_history\*(R", \*(L"inc_append_history\*(R", \*(L"hist_ignore_all_dups\*(R", \*(L"hist_reduce_blanks\*(R", \*(L"hist_ignore_space\*(R", \*(L"interactive_comments\*(R", \*(L"correct\*(R", \*(L"no_beep\*(R" and \*(L"prompt_subst\*(R".
.PP
For further configuration details consult zsh's man pages
.SH "OPTIONS"
.IX Header "OPTIONS"
Fizsh is usually invoked without options and without command-line arguments.
.PP
The only supported command-line options are \*(L"\-\-version\*(R", \*(L"\-\-help\*(R", \*(L"\-\-login\*(R", shorthands for these commands are \*(L"\-v\*(R", \*(L"\-h\*(R", \*(L"\-l\*(R" respectively. \*(L"\-\-version\*(R" yields fizsh's version number. \*(L"\-\-help\*(R" causes fizsh to print brief usage information. \*(L"\-\-login\*(R" causes fizsh to run as a login shell.
.PP
If invoked with other command-line options and/or arguments fizsh will silently revert to zsh.
=head1 \s-1BUGS\s0
.PP
There are no known bugs at the moment. Bug reports, bug fixes and other comments are welcome.
.SH "NOTES"
.IX Header "NOTES"
Fizsh will run as a login shell if it is invoked with the \*(L"\-l\*(R", or if it is started by the \*(L"login\*(R" program. If fizsh is run as a login shell \*(L"$0\*(R" will be set to \*(L"\-fizsh\*(R". \*(L"$0\*(R" will be \*(L"fizsh\*(R" otherwise.
.PP
\&\s-1MATLAB\s0 is a registered trademark of The MathWorks, Inc.
.SH "AUTHOR"
.IX Header "AUTHOR"
Guido van Steen, based on work by the \*(L"zsh-syntax-highlighting contributors\*(R" and the contributors to \*(L"zsh-history-substring-search\*(R". The author also gratefully acknowledges http://www.zsh.org/mla/users/2011/msg00734.html.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBfizsh\fR\|(1), \fBfish\fR\|(1), \fBzsh\fR\|(1)
